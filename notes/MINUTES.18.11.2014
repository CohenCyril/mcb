Organisation à venir de Math-components.

La question: comment intégrer des contributions externes dans math-components.
 
Notes au tableau:

 Publier | copie sans historique

   * Sur gitub (pour bénéficier des forums)
   * avec synchronisation dans les deux sens avec svn
   * avec 1 espace de discussion privé pour le comité éditorial
   * contenu : ssr, mathcomp, odd-order, others

Contribs, des sujets à discuter plus tard (peut-être pas aujourd'hui)
   * pub 
    * discussions
    * régressions
---------------

Reprise de la discussion sur le serveur git.

  ramener le contenu seulement à :
   ssr, mathcomp, odd-order

   Certains fichiers actuellement non spécifiques à odd-order ne sont pas prêts à mettre dans la version stable, mais ont vocation à finir dans mathcomp.

+ Message sur la mailing list


Question quel est le statut de four-colour theorem.

Actuellement, la release mathcomp combine deux caractéristiques: les fichiers d'usage raisonnablement général et un standard de documentation.  Dans la nouvelle mathcomp, il y aura tous les fichiers d'usage général.

Parler de doc.
  Tous les sens de doc.  Il manque de la documentation dans les fichiers (destinés à mathcomp), est-ce qu'on se répartit le travail.
  Documenter le processus de documentation. 

Quelle présentation pour le comité éditorial.

rédiger un message à envoyer sur ssreflect.  mais discuter auparavant  sur un liste des développeurs.

*******
Après-midi

Sujet : la doc

Est-ce qu'on profite de cette étape pour faire une passe sur les headers de tous les fichiers?
Qu'est-ce qu'on veut donner comme lignes guides?  Qu'est-ce qu'on veut dire aux utilisateurs?
Quelle est la bonne approche pour communiquer entre les utilisateurs et ssr-dev.

Comment ajouter un lemme à mathcomp?
Comment ajouter une contributions dans la partie basse.

Veut-on donner la possibilité de faire des pull-requests.  

Proposition: vous pouvez faire des pull requests, le comité d'édition donnera son avis.

Qui est dans le comité d'édition.  Nous 7 plus Georges, ça semble raisonnable.  Comment fonctionner?  Pas besoin de règles strictes, mais il est bon de prendre des avis collectifs avant de mettre en place des règles.

Discussion technique sur la synchronisation github: github fournit une interface svn, on peut faire des expérience avec des données non pertinentes.  

Reprise de discussion sur la doc, les cheat-sheets.  Si les gens veulent ajouter un lemme, il faut s'attendre à avoir des problèmes de nommage.  Plutôt essayer de ne décrire ces conventions de nommage qu'en appel par besoin.

Cyril propose de faire un mail.

-----------------------
Interruption de Yves pour demander que l'on re-discute sur les engagements dans le livre.  Insistance pour que les contributeurs s'impliquent uniquement par volontariat.

Il est perçu que les chapitres de la deuxième partie ont souvent une explication d'une partie non-standard, qui correspond à ce qui est fait pour la formalisation, mais ne correspond pas bien aux habitudes des mathématiciens.
Le parti-pris de l'école Map ne fonctionne pas forcément très bien.

Plusieurs points méritent d'être expliqués: la pratique formelle clarifie la pratique des mathématiciens, mais être bien faite, elle demande que l'on s'appuie sur des définitions qui peuvent être différentes des défiinitions qui viennent tout de suite à l'idée d'un mathématicien.


 
Try to implement a 'packed-classes' plugin in order to
systematize/automate/hide the verbosity of declaring new instance (and
hence adding a new structure) in a hierarchy of packed classes.

Technicalities

It seems that the best available solution as of today is LaTeX, we
mentionned:
- TeXmacs but it is not sure it scales to a book
- coqdoc but the pdf rendering is ugly plus we will have lots of math
symbols

Other question: do we plan to have an other format that pdf? Yves
mentionned ebooks. Probably no.

-> decision: good old latex.

Cyril mentions tryocaml for complement, teaching oriented,
material. Everyone agrees that it is good/mandatory to have a sort of
"course", lecture material.

Yves about the process in the CoqArt sources:

- a perl script 

- it recognizes the portions of text between special
  delimiters and put them in a separate file. There is a key for each portion,
with a number. Then the output of the Coq execution is stored in a
  third file. There is a single Coq file per chapter. The keys are
  used to separate the output which is parsed back and included in the
  LaTeX sources.

- Caveat : inlined code was not executed by the device.
